import requests, datetime, os
from matplotlib import pyplot as plt
from scipy.interpolate import interp1d
from typing import List, Dict
import numpy as np
from nonebot.adapters.onebot.v11.message import MessageSegment

def get_user_data(username: str) -> MessageSegment:
    raw_user_data, rank_scores = get_raw_user_data(username)
    scores = [game["score"] for game in raw_user_data]
    index = [i+1 for i in range(len(scores))]
    plt.style.use('default')
    plt.rcParams["font.sans-serif"] = ["SimHei"]
    figure = plt.figure(figsize=(20, 10))
    plt.plot(index, scores, marker='o', color = "black")
    min_score = min([min(rank_score) for rank_score in rank_scores])
    max_score = max([max(rank_score) for rank_score in rank_scores])
    _rank_scores = [[max_score] + scores + [min_score] for scores in rank_scores]
    color_map = {0: 'blue', 1: 'green', 2: 'red', 3: 'yellow'}
    for rank in [0, 1, 2, 3]:
        y_low = [(scores[rank + 2] + scores[rank + 1]) / 2 for scores in _rank_scores] if rank != 3 else [min_score] * len(index)
        y_high = [(scores[rank + 1] + scores[rank]) / 2 for scores in _rank_scores] if rank != 0 else [max_score] * len(index)
        f_low = interp1d(index, y_low, kind = 'cubic')
        f_high = interp1d(index, y_high, kind = 'cubic')
        x_smooth = np.linspace(1, len(index), 300)
        y_low_smooth = f_low(x_smooth)
        y_high_smooth = f_high(x_smooth)
        plt.fill_between(x_smooth, y_high_smooth, y_low_smooth, color = color_map[rank], alpha = 0.5)
    plt.title(f"{username}近30局对局统计", fontsize = 20)
    figure.text(0.8, 0.03, f"Generated by Bi_Gu-bot at {datetime.datetime.now().strftime('%Y-%m-%d %H:%M:%S')}", ha='center', fontsize = 15)
    plt.savefig(os.getcwd() + f"/src/data/mahjong/{username}.png")
    return MessageSegment.image("file:///" + os.getcwd() + f"/src/data/mahjong/{username}.png")



def get_raw_user_data(username: str) -> tuple[List[Dict], List[List[int]]]:
    url = f"https://5-data.amae-koromo.com/api/v2/pl4/search_player/{username}?limit=20&tag=all"
    user_id = requests.get(url).json()[0]["id"]
    _url = f"https://5-data.amae-koromo.com/api/v2/pl4/player_records/{user_id}/1711917299999/1262304000000?limit=141&mode=16,12,9,8&descending=true"
    user_data = requests.get(_url).json()
    res, rank_scores = [], []
    for game in user_data:
        sorted_players = sorted(game["players"], key = lambda x: x["score"], reverse = True)
        for player_info in sorted_players:
            if player_info["accountId"] == user_id:
                player_info["rank"] = sorted_players.index(player_info) + 1
                res.append(player_info)
        rank_scores.append([player["score"] for player in sorted_players])
    return res[:30][::-1], rank_scores[:30][::-1]
